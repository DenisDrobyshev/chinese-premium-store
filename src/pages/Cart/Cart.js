import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import { useCart } from '../../context/CartContext';
import './Cart.css';

const Cart = () => {
  const { items, removeFromCart, updateQuantity, getCartTotal, clearCart } = useCart();
  const [showCheckout, setShowCheckout] = useState(false);
  const [order, setOrder] = useState({
    name: '',
    email: '',
    phone: '',
    address: '',
    comment: ''
  });

  const handleQuantityChange = (id, size, newQuantity) => {
    if (newQuantity <= 0) {
      removeFromCart(id, size);
    } else {
      updateQuantity(id, size, newQuantity);
    }
  };

  const handleCheckoutSubmit = (e) => {
    e.preventDefault();
    alert('–ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.');
    clearCart();
    setShowCheckout(false);
    setOrder({ name: '', email: '', phone: '', address: '', comment: '' });
  };

  if (items.length === 0) {
    return (
      <div className="cart-page">
        <div className="container">
          <div className="cart-header">
            <h1>–ö–æ—Ä–∑–∏–Ω–∞</h1>
          </div>
          <div className="empty-cart">
            <div className="empty-cart-icon">üõí</div>
            <h2>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
            <p>–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏</p>
            <Link to="/catalog" className="continue-shopping-btn">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏</Link>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="cart-page">
      <div className="container">
        <div className="cart-header">
          <h1>–ö–æ—Ä–∑–∏–Ω–∞</h1>
          <button onClick={clearCart} className="clear-cart-btn">–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É</button>
        </div>
        
        <div className="cart-content">
          <div className="cart-items">
            {items.map(item => (
              <div key={`${item.id}-${item.size}`} className="cart-item">
                <div className="item-image">
                  <img src={item.image} alt={item.title} />
                </div>
                <div className="item-details">
                  <h3 className="item-title">{item.title}</h3>
                  <p className="item-size">–†–∞–∑–º–µ—Ä: {item.size}</p>
                  <p className="item-price">{item.price.toLocaleString('ru-RU')}‚ÇΩ</p>
                </div>
                <div className="item-quantity">
                  <button 
                    onClick={() => handleQuantityChange(item.id, item.size, item.quantity - 1)}
                  >-</button>
                  <span>{item.quantity}</span>
                  <button 
                    onClick={() => handleQuantityChange(item.id, item.size, item.quantity + 1)}
                  >+</button>
                </div>
                <div className="item-total">
                  {(item.price * item.quantity).toLocaleString('ru-RU')}‚ÇΩ
                </div>
                <button 
                  className="remove-item-btn"
                  onClick={() => removeFromCart(item.id, item.size)}
                  aria-label="–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä"
                >
                  <i className="fas fa-times"></i>
                </button>
              </div>
            ))}
          </div>
          
          <div className="cart-summary">
            <h2>–ò—Ç–æ–≥–æ</h2>
            <div className="summary-row">
              <span>–¢–æ–≤–∞—Ä—ã ({items.reduce((total, item) => total + item.quantity, 0)})</span>
              <span>{getCartTotal().toLocaleString('ru-RU')}‚ÇΩ</span>
            </div>
            <div className="summary-row">
              <span>–î–æ—Å—Ç–∞–≤–∫–∞</span>
              <span>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</span>
            </div>
            <div className="summary-divider"></div>
            <div className="summary-row total">
              <span>–û–±—â–∞—è —Å—É–º–º–∞</span>
              <span>{getCartTotal().toLocaleString('ru-RU')}‚ÇΩ</span>
            </div>
            <button className="checkout-btn" onClick={() => setShowCheckout(prev => !prev)}>
              {showCheckout ? '–°–∫—Ä—ã—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ' : '–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é'}
            </button>
            <Link to="/catalog" className="continue-shopping-link">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–∫—É–ø–∫–∏</Link>

            {showCheckout && (
              <form className="checkout-form" onSubmit={handleCheckoutSubmit}>
                <h3>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h3>
                <div className="form-grid">
                  <label>
                    –ò–º—è
                    <input type="text" value={order.name} onChange={(e) => setOrder({ ...order, name: e.target.value })} required />
                  </label>
                  <label>
                    Email
                    <input type="email" value={order.email} onChange={(e) => setOrder({ ...order, email: e.target.value })} required />
                  </label>
                  <label>
                    –¢–µ–ª–µ—Ñ–æ–Ω
                    <input type="tel" value={order.phone} onChange={(e) => setOrder({ ...order, phone: e.target.value })} required />
                  </label>
                  <label className="full">
                    –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏
                    <input type="text" value={order.address} onChange={(e) => setOrder({ ...order, address: e.target.value })} required />
                  </label>
                  <label className="full">
                    –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
                    <textarea rows="3" value={order.comment} onChange={(e) => setOrder({ ...order, comment: e.target.value })}></textarea>
                  </label>
                </div>
                <button type="submit" className="submit-order-btn">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑</button>
              </form>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Cart;